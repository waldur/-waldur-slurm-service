include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/python-linters.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/python-tests.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/release/python-module-release.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/sbom/generate-python-codebase-sbom.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/sbom/upload-sboms-to-docs.yml"

Run python v3.9 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.9"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.9' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.10 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.10"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.10' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.11 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.11"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.11' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.12 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.12"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.12' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.13 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.13"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.13' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

.Test template:
  extends: .Run tests template
  before_script:
  - cp examples/waldur-site-agent-config.yaml.example ./waldur-site-agent-config.yaml


Run python v3.9 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.9"
  extends: .Test template

Run python v3.10 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.10"
  extends: .Test template

Run python v3.11 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.11"
  extends: .Test template

Run python v3.12 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.12"
  extends: .Test template

Run python v3.13 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.13"
  extends: .Test template

Generate Codebase SBOM:
  extends: .Generate Codebase SBOM template
  variables:
    PROJECT_NAME: "waldur-site-agent"

Upload Source SBOM:
  extends: .Upload SBOM template
  needs:
    - Generate Codebase SBOM
  variables:
    PROJECT_NAME: "waldur-site-agent"
    SBOM_TYPE: "source"
    SBOM_DIR: "source"

Upload docs:
  image:
    name: registry.hpc.ut.ee/mirror/alpine/git:v2.30.2
    entrypoint: [""]
  stage: deploy
  interruptible: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "schedule"'
  script:
    - cd /tmp/
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-docs.git"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - cd waldur-docs/
    - ls docs/admin-guide/providers/
    - cp -v $CI_PROJECT_DIR/README.md docs/admin-guide/providers/waldur-site-agent.md
    - mkdir docs/admin-guide/providers/examples || true
    - cp -rv $CI_PROJECT_DIR/examples/* docs/admin-guide/providers/examples/
    - mkdir docs/admin-guide/providers/systemd-conf/ || true
    - cp -rv $CI_PROJECT_DIR/systemd-conf/* docs/admin-guide/providers/systemd-conf/
    - cp -rv $CI_PROJECT_DIR/img/* docs/admin-guide/providers/img/
    - git add docs/admin-guide/providers/
    - git commit -m 'Update Waldur Site Agent docs' || exit 0
    - git branch new-site-agent-docs
    - git push --set-upstream origin new-site-agent-docs:master
